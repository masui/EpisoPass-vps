// Generated by CoffeeScript 1.12.4
(function() {
  var display, secretstr;

  display = function(data, name, seed, passelement, qno, answer) {
    var answers, center, div, episodiv, i, input, j, qtext, ref, results, seedinput;
    episodiv = $('#episopass');
    episodiv.children().remove();
    qtext = data['qas'][qno]['question'];
    center = $('<center>');
    episodiv.append(center);
    center.css('width', '100%');
    if (qtext.match(/\/([^\/]+\.(gif|png|jpg|jpeg))$/i)) {
      div = $('<img>').css('width', 120).attr('src', qtext);
    } else {
      div = $('<div>').text(qtext).css('background-color', '#ccc').css('width', '390px').css('border-radius', '5px').css('padding', '4px').css('margin', '2 auto');
    }
    center.append(div);
    center.append($('<p>'));
    div = $('<div>');
    center.append(div);
    if (qno === 0) {
      seedinput = $('<input>');
      seedinput.attr('type', 'text');
      seedinput.val(seed);
      div.append(seedinput);
      div.append($('<p>'));
    }
    answers = data['qas'][qno]['answers'];
    results = [];
    for (i = j = 0, ref = answers.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      input = $('<input>');
      input.attr('type', 'button').attr('value', answers[i]).attr('anumber', i).css('margin', '2pt').css('padding', '1pt').click(function(event) {
        var newpass;
        event.preventDefault();
        if (qno === 0) {
          seed = seedinput.val();
        }
        answer[qno] = Number($(this).attr('anumber'));
        if (qno < data['qas'].length - 1) {
          return display(data, name, seed, passelement, qno + 1, answer);
        } else {
          newpass = exports.crypt(seed, secretstr(data, answer));
          passelement.val(newpass);
          return episodiv.remove();
        }
      });
      results.push(div.append(input));
    }
    return results;
  };

  secretstr = function(data, answer) {
    var i, j, qas, ref, secret;
    secret = "";
    qas = data['qas'];
    for (i = j = 0, ref = qas.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      secret += qas[i]['question'];
      secret += qas[i]['answers'][answer[i]];
    }
    return secret;
  };

  exports.run = function(data, name, seed, passelement) {
    return display(data, name, seed, passelement, 0, []);
  };

}).call(this);
